[[pre-requisites]]
[preface]
Prerequisites and Assumptions
------------------------------

The tutorial uses Python 3.


Required Software Installations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Aside from Python, you'll need:

* **Firefox** 

* **Git** 

* **Pip** 

* **Selenium** 

* **Django 1.7** 

To make sure we're using the Python3 version of pip, I'll always use `pip3`
as the executable in my command-line examples.  Depending on your platform, it 
may be `pip-3.3` or `pip-3.4`.


.Windows Notes
*******************************************************************************
Windows users can sometimes feel a little neglected, since OS X and Linux make
it easy to forget there's a world outside the Unix paradigm.  Backslashes
as directory separators?  Drive letters?  What?   Still, it is absolutely
possible to follow along with this book on Windows.  Here are a few tips:

1. When you install Git for Windows, make sure you choose '"Run Git and included
Unix tools from the Windows command prompt"'. You'll then get access to 
a program called "Git Bash". Use this as your main command prompt and you'll
get all the useful GNU command-line tools like `ls`, `touch`, and `grep`, plus
forward-slash directory separators.

2. When you install Python 3, make sure you tick the option that says 
"add python.exe to Path" as in <<add-python-to-path>>, to make sure you can 
run Python from the command line.
+
[[add-python-to-path]]
.Add python to the system path from the installer
image::images/twdp_0001.png[Screenshot of python installer]

3. On Windows, Python 3's executable is called `python.exe`, which is exactly
the same as Python 2.  To avoid any confusion, create a symlink in the Git Bash
binaries folder, like this:
+
[subs="specialcharacters,quotes"]
----
*ln -s /c/Python34/python.exe /bin/python3.exe*
----
+
You may need to right-click Git-Bash and choose "Run as an administrator" for
that command to work.  Note also that the symlink will only work in Git Bash,
not in the regular DOS command prompt.

4. Python 3.4 comes with pip, the package management tool.  You can check
it's installed by doing a `which pip3` from a command line, and it should
show you `/c/Python34/Scripts/pip3`.
+
If, for whatever reason, you're stuck with Python 3.3 and you don't have
`pip3`, check http://www.pip-installer.org/ 
for installation instructions. At the time of writing, this involved
downloading a file and then executing it with `python3 get-pip.py`. 
'Make sure you use `python3` when you run the setup script'.

TIP: The test for all this is that you should be able to go to a Git-Bash
command prompt and just run `python3` or `pip3` from any folder.

*******************************************************************************



.MacOS Notes
*******************************************************************************
MacOS is a bit more sane than Windows, although getting `pip3` installed was
still fairly challenging up until recently. With the arrival of 3.4, things are
now quite straightforward:

* Python 3.4 should install without a fuss from its
  http://www.python.org[downloadable installer].  It will automatically install
  pip, too.

* Git's installer should also "just work".

Similarly to Windows, the test for all this is that you should be able to open
a terminal and just run `git`, `python3`, or `pip3` from anywhere.  If you run
into any trouble, the search terms "system path" and "command not found" should
provide good troubleshooting resources.

TIP: You might also want to check out http://brew.sh//[Homebrew].
It used to be the only reliable way of installing lots of Unixy tools
(including Python 3) on a Mac. Although the Python installer is now fine, you
may find it useful in future. It does require you to download all 1.1 GB of
Xcode, but that also gives you a C compiler, which is a useful side effect.

*******************************************************************************




Required Python Packages
^^^^^^^^^^^^^^^^^^^^^^^^

Once you have 'pip' installed, it's trivial to install new Python packages.
We'll install some as we go, but there are a couple we'll need right from
the beginning, so you should install them right away:

* 'Django 1.7', *`sudo pip3 install django==1.7`* (omit the `sudo` on 
Windows). This is our web framework. You should make sure you have version 1.7
installed and that you can access the `django-admin.py` executable from a
command line.  The https://docs.djangoproject.com/en/1.7/intro/install/[Django
documentation] has some installation instructions if you need help.

* 'Selenium', *`sudo pip3 install --upgrade selenium`* (omit the `sudo` on 
Windows), 

NOTE: Unless you're absolutely sure you know what you're doing, 'don't' 
use a `virtualenv`. 

